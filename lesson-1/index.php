<!doctype html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Homework of lesson-1 PHP-1</title>
</head>
<body>

<main>
    <section>
        <h1>Выполнение домашнего задания урока 1&nbsp;курса &laquo;PHP-1&raquo;</h1>
        <article>
            <header>
                <h3>3. В&nbsp;PHP есть функция var_dump($something), которая выводит подробную информацию о&nbsp;значениях
                    и&nbsp;их&nbsp;типах. Попробуйте написать что-нибудь вроде var_dump(2*2); чтобы увидеть, как она
                    работает. Изучите с&nbsp;помощью этой функции следующие выражения:</h3>
            </header>
            <p>
                Проверяю: var_dump(2*2);<br>
                Вывод: <?php var_dump(2 * 2); ?><br>
                Пояснение: Целое число (integer)
            </p>
            <p>
                Проверяю: var_dump(3 / 1);<br>
                Вывод: <?php var_dump(3 / 1); ?><br>
                Пояснение: Целое число (integer)
            </p>
            <p>
                Проверяю: var_dump(1 / 3);<br>
                Вывод: <?php var_dump(1 / 3); ?><br>
                Пояснение: Число с плавающей точкой (float), так как деление получилось с остатком
            </p>
            <p>
                Проверяю: var_dump('20cats' + 40);<br>
                Вывод: <?php var_dump('20cats' + 40); ?><br>
                Пояснение: Целое число (integer). String '20cats' преобразовался в integer (слово 'cats' отбросилось)
            </p>
            <p>
                Проверяю: var_dump(18 % 4);<br>
                Вывод: <?php var_dump(18 % 4); ?><br>
                Пояснение: Целое число (integer). Остаток от деления 16/4 получился 2.
            </p>
        </article>

        <article>
            <header>
                <h3>4. Говорят, что в&nbsp;PHP &laquo;всё является выражением&raquo;. Интересно, что даже присваивание
                    переменной какого-либо значения тоже является выражением! Изучите примеры ниже и&nbsp;дайте ответ&nbsp;&mdash;
                    что&nbsp;же является значением выражения присваивания?</h3>
            </header>
            <p>
                Проверяю: $a = 2 <br>
                Вывод: <?php echo($a = 2); ?><br>
                Пояснение: значением выражения присваивания переменной $a является 2
            </p>
            <p>
                Проверяю: $x = ($y = 12) - 8<br>
                Вывод: <?php

                $x = ($y = 12) - 8;
                echo $x;

                ?><br>
                Пояснение: значением выражения присваивания переменной $x является 4. В скобках переменной $y
                присваивается значение 12 от которого затем отнимается 8.
            </p>
        </article>

        <article>
            <header>
                <h3>5. В PHP имеется логический (boolean) тип, имеющий два значения - true (истина) и false (ложь).
                    Изучите с помощью var_dump() следующие выражения и объясните их:</h3>
            </header>
            <p>
                Проверяю: 1 == 1.0 <br>
                Вывод: <?php var_dump(1 == 1.0); ?><br>
                Пояснение: true. Нестрогое равенство, поэтому происходит преобразование типов.
            </p>
            <p>
                Проверяю: 1 === 1.0 <br>
                Вывод: <?php var_dump(1 === 1.0); ?><br>
                Пояснение: false. Строгое равенство или тождественно равно, поэтому преобразование типов не происходит,
                так как в этом случае кроме самих значений сравниваются еще и типы
            </p>
            <p>
                Проверяю: '02' == 2 <br>
                Вывод: <?php var_dump('02' == 2); ?><br>
                Пояснение: true. Нестрогое равенство, поэтому происходит преобразование типов.
            </p>
            <p>
                Проверяю: '02' === 2 <br>
                Вывод: <?php var_dump('02' === 2); ?><br>
                Пояснение: false. Строгое равенство или тождественно равно, поэтому преобразование типов не происходит,
                так как в этом случае кроме самих значений сравниваются еще и типы
            </p>
            <p>
                Проверяю: '02' == '2' <br>
                Вывод: <?php var_dump('02' == '2'); ?><br>
                Пояснение: true. Нестрогое равенство, поэтому происходит преобразование типов.
            </p>
        </article>
    </section>
</main>

</body>
</html>